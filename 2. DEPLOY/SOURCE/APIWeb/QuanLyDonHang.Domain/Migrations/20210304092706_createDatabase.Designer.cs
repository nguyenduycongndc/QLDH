// <auto-generated />
using System;
using QuanLyDonHang.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace QuanLyDonHang.Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210304092706_createDatabase")]
    partial class createDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuanLyDonHang.Domain.Models.Money", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Money");
                });

            modelBuilder.Entity("QuanLyDonHang.Domain.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmountBeforeTax");

                    b.Property<string>("Code");

                    b.Property<string>("ContactNumber");

                    b.Property<string>("ContructionType");

                    b.Property<int>("CreatedByID");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeadlineDate");

                    b.Property<string>("Description");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsImport");

                    b.Property<int>("ModifiedByID");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("MoneyTypeID");

                    b.Property<string>("ProductType");

                    b.Property<int>("Status");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("MoneyTypeID")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("QuanLyDonHang.Domain.Models.OrderDocument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<string>("Name");

                    b.Property<int>("OrderID");

                    b.Property<string>("Path");

                    b.HasKey("ID");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.ToTable("OrderDocument");
                });

            modelBuilder.Entity("QuanLyDonHang.Domain.Models.OrderPayment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("OrderID");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<int>("PaymentType");

                    b.Property<int>("Percent");

                    b.HasKey("ID");

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.ToTable("OrderPayment");
                });

            modelBuilder.Entity("QuanLyDonHang.Domain.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("ExpPasswordToken");

                    b.Property<int>("IsActive");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordToken");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("Role");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QuanLyDonHang.Domain.Models.Order", b =>
                {
                    b.HasOne("QuanLyDonHang.Domain.Models.Money", "Money")
                        .WithOne("Order")
                        .HasForeignKey("QuanLyDonHang.Domain.Models.Order", "MoneyTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuanLyDonHang.Domain.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("QuanLyDonHang.Domain.Models.OrderDocument", b =>
                {
                    b.HasOne("QuanLyDonHang.Domain.Models.Order", "Order")
                        .WithOne("OrderDocument")
                        .HasForeignKey("QuanLyDonHang.Domain.Models.OrderDocument", "OrderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("QuanLyDonHang.Domain.Models.OrderPayment", b =>
                {
                    b.HasOne("QuanLyDonHang.Domain.Models.Order", "Order")
                        .WithOne("OrderPayment")
                        .HasForeignKey("QuanLyDonHang.Domain.Models.OrderPayment", "OrderID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
